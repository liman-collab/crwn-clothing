{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sony Beshi Elect\\\\React Projects\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\custom-button\\\\custom-button.component.js\";\n// import React from \"react\";\n// import { CustomButtonContainer } from \"./custom-button.styles\";\n// const CustomButton = ({ children, ...props }) => (\n//   <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n// );\n// export default CustomButton;\nimport React from \"react\";\nimport \"./custom-button.styles.scss\";\n\nconst CustomButton = ({\n  children,\n  isGoogleSignIn,\n  inverted,\n  ...otherProps\n}) => /*#__PURE__*/React.createElement(\"button\", Object.assign({\n  className: `${inverted ? \"inverted\" : \"\"}   ${isGoogleSignIn ? \"google-sign-in\" : \"\"} custom-button` //we will always render custom-button\n\n}, otherProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}), children);\n\nexport default CustomButton;","map":{"version":3,"sources":["C:/Users/Sony Beshi Elect/React Projects/crwn-clothing/client/src/components/custom-button/custom-button.component.js"],"names":["React","CustomButton","children","isGoogleSignIn","inverted","otherProps"],"mappings":";AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,QADoB;AAEpBC,EAAAA,cAFoB;AAGpBC,EAAAA,QAHoB;AAIpB,KAAGC;AAJiB,CAAD,kBAMnB;AACE,EAAA,SAAS,EAAG,GAAED,QAAQ,GAAG,UAAH,GAAgB,EAAG,MACvCD,cAAc,GAAG,gBAAH,GAAsB,EACrC,gBAHH,CAGoB;;AAHpB,GAIME,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMGH,QANH,CANF;;AAeA,eAAeD,YAAf","sourcesContent":["// import React from \"react\";\r\n\r\n// import { CustomButtonContainer } from \"./custom-button.styles\";\r\n\r\n// const CustomButton = ({ children, ...props }) => (\r\n//   <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\r\n// );\r\n\r\n// export default CustomButton;\r\nimport React from \"react\";\r\n\r\nimport \"./custom-button.styles.scss\";\r\n\r\nconst CustomButton = ({\r\n  children,\r\n  isGoogleSignIn,\r\n  inverted,\r\n  ...otherProps\r\n}) => (\r\n  <button\r\n    className={`${inverted ? \"inverted\" : \"\"}   ${\r\n      isGoogleSignIn ? \"google-sign-in\" : \"\"\r\n    } custom-button`} //we will always render custom-button\r\n    {...otherProps}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\nexport default CustomButton;\r\n"]},"metadata":{},"sourceType":"module"}