{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sony Beshi Elect\\\\React Projects\\\\crwn-clothing\\\\src\\\\components\\\\custom-button\\\\custom-button.component.js\";\nimport React from \"react\";\nimport { CustomButtonContainer } from \"./custom-button.styles\";\n\nconst CustomButton = ({\n  children,\n  ...props\n}) => /*#__PURE__*/React.createElement(CustomButtonContainer, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}), children);\n\nexport default CustomButton; // import React from \"react\";\n// import \"./custom-button.styles.scss\";\n// const CustomButton = ({\n//   children,\n//   isGoogleSignIn,\n//   inverted,\n//   ...otherProps\n// }) => (\n//   <button\n//     className={`${inverted ? \"inverted\" : \"\"}   ${\n//       isGoogleSignIn ? \"google-sign-in\" : \"\"\n//     } custom-button`} //we will always render custom-button\n//     {...otherProps}\n//   >\n//     {children}\n//   </button>\n// );\n// export default CustomButton;","map":{"version":3,"sources":["C:/Users/Sony Beshi Elect/React Projects/crwn-clothing/src/components/custom-button/custom-button.component.js"],"names":["React","CustomButtonContainer","CustomButton","children","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,qBAAT,QAAsC,wBAAtC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,kBACnB,oBAAC,qBAAD,oBAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAmCD,QAAnC,CADF;;AAIA,eAAeD,YAAf,C,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\n\r\nimport { CustomButtonContainer } from \"./custom-button.styles\";\r\n\r\nconst CustomButton = ({ children, ...props }) => (\r\n  <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\r\n);\r\n\r\nexport default CustomButton;\r\n// import React from \"react\";\r\n\r\n// import \"./custom-button.styles.scss\";\r\n\r\n// const CustomButton = ({\r\n//   children,\r\n//   isGoogleSignIn,\r\n//   inverted,\r\n//   ...otherProps\r\n// }) => (\r\n//   <button\r\n//     className={`${inverted ? \"inverted\" : \"\"}   ${\r\n//       isGoogleSignIn ? \"google-sign-in\" : \"\"\r\n//     } custom-button`} //we will always render custom-button\r\n//     {...otherProps}\r\n//   >\r\n//     {children}\r\n//   </button>\r\n// );\r\n// export default CustomButton;\r\n"]},"metadata":{},"sourceType":"module"}